version: '3.8'

services:
  # Frontend development server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001/api
    command: npm run dev
    depends_on:
      - backend

  # Backend server
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - ./server:/app/server
      - ./uploads:/app/uploads
    depends_on:
      - postgres

  # PostgreSQL database (for production-like development)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=school_nexus
      - POSTGRES_USER=school_nexus
      - POSTGRES_PASSWORD=school_nexus_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: school_nexus_network